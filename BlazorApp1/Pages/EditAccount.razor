@page "/editaccount/{accountId:int}"
@using BlazorApp1.Models
@using BlazorApp1.Services
@inject AccountService AccountService
@inject NavigationManager NavManager
@attribute [Authorize]
<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card shadow-sm">
                <div class="card-body">
                    <h4 class="card-title text-primary mb-3">✏️ Edit Account</h4>
                    <p class="text-muted">Update the account details below and click save to apply changes.</p>

                    <EditForm Model="@account" OnValidSubmit="SaveAccount">
                        <DataAnnotationsValidator />

                        <div class="mb-3">
                            <label for="codeInput" class="form-label">Code</label>
                            <InputText id="codeInput" class="form-control" @bind-Value="account.Code" />
                        </div>

                        <div class="mb-3">
                            <label for="descriptionInput" class="form-label">Description</label>
                            <InputText id="descriptionInput" class="form-control" @bind-Value="account.Description" />
                        </div>

                        <div class="mb-3">
                            <label for="orderInput" class="form-label">Order By</label>
                            <InputNumber id="orderInput" class="form-control" @bind-Value="account.OrderBy" />
                        </div>

                        <div class="mb-3 form-check">
                            <InputCheckbox id="isDeletedCheck" class="form-check-input" @bind-Value="account.IsDeleted" />
                            <label for="isDeletedCheck" class="form-check-label">Mark as Deleted</label>
                        </div>

                        <div class="d-grid">
                            <button type="submit" class="btn btn-success">💾 Save Changes</button>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public int accountId { get; set; }
    private Account account = new Account();
    Guid userId = Guid.Empty;
    protected override async Task OnInitializedAsync()
    {
        userId = await AccountService.GetCurrentUserId();
        account = AccountService.GetAccount(userId, accountId);

    }

    protected async Task SaveAccount()
    {
        AccountService.SaveAccount(userId, accountId, account.Description, account.OrderBy, account.IsDeleted);
        NavManager.NavigateTo("/");
        

        
    }
}
