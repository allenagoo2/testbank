@page "/"
@using BlazorApp1.Models
@using BlazorApp1.Services
@inject AccountService AccountService 
@attribute [Authorize]
<h3>Accounts:  @Total.ToString("C")  </h3>
<table class="table">
    <thead>
        <tr>
            <th>Code</th>
            <th>Description</th>
            <th>Amount</th>
            
        </tr>
    </thead>
    <tbody>
        @foreach (var a in accounts)
        {
            <tr>
                <td> <NavLink href="@($"editaccount/{a.Id}")"> @a.Code</NavLink>  </td>
                <td>@a.Description</td>
                <td>@a.Amount.ToString("C")</td>

            </tr>
        }
    </tbody>
</table>


 


<h3>Transactions</h3>
<table class="table">
    <thead>
        <tr>
            <th>Date</th>
            <th>Account</th>
            
            

        </tr>
    </thead>
    <tbody>
        @foreach (var a in audits)
        {
            <tr>
                <td>@a.DateCreated.ToString("dddd, dd MMMM yyyy")</td>
                
                <td>@a.Description</td>
                
            </tr>
        }
    </tbody>
</table>

@code {


    private List<Audit> audits;
    private List<Account> accounts;
    private Account newAccount=new Account();
    Guid userId = Guid.Empty;

    private decimal Total = 0;

    protected override async Task OnInitializedAsync()
    {


        userId = await AccountService.GetCurrentUserId();
        accounts = AccountService.GetAccounts(userId);
        audits = AccountService.GetLogAudit(userId);
        Total = accounts.Sum(x => x.Amount);

    }

 

    protected async Task SaveAccount()
    {
        AccountService.AddAccount(newAccount.Code, newAccount.Description, newAccount.OrderBy, userId);
        accounts = AccountService.GetAccounts(userId);
        newAccount = new Account();
    }

    

    

    int selectedAccountID;
    string selectedAmount;

   
}
