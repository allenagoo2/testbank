@page "/addaccounts"
@using BlazorApp1.Models
@using BlazorApp1.Services
@inject AccountService AccountService
@attribute [Authorize]
<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card shadow-sm">
                <div class="card-body">
                    <h4 class="card-title text-primary mb-3">➕ Add New Account</h4>
                    <p class="text-muted">Fill in the details below to create a new account.</p>

                    <EditForm Model="@newAccount" OnValidSubmit="SaveAccount">
                        <DataAnnotationsValidator />

                        <div class="mb-3">
                            <label for="Code" class="form-label">Code</label>
                            <InputText id="Code" class="form-control" @bind-Value="newAccount.Code" />
                        </div>

                        <div class="mb-3">
                            <label for="Description" class="form-label">Description</label>
                            <InputText id="Description" class="form-control" @bind-Value="newAccount.Description" />
                        </div>

                        <div class="d-grid">
                            <button type="submit" class="btn btn-success">
                                💾 Save Account
                            </button>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
</div>


@code {


    private List<Audit> audits;
    private List<Account> accounts;
    private Account newAccount=new Account();
    Guid userId = Guid.Empty;
    protected override async Task OnInitializedAsync()
    {
        userId = await AccountService.GetCurrentUserId();
        accounts = AccountService.GetAccounts(userId);
        audits = AccountService.GetLogAudit(userId);
        
    }

    protected async Task SaveAccount()
    {
        AccountService.AddAccount(newAccount.Code, newAccount.Description, newAccount.OrderBy, userId);
        accounts = AccountService.GetAccounts(userId);
        newAccount = new Account();
    }

    

    

    int selectedAccountID;
    string selectedAmount;

   
}
